import{r as e,V as t,T as s,B as i,a,L as n,m as r,C as o,b as l,E as c,D as d,c as h,d as p,e as m,f as u,P as E,g,h as f,i as b,w as y,F as v,j as S,S as T,R as C,k,l as A,n as w,o as I}from"./vendor.53473af0.js";!function(e=".",t="__import__"){try{self[t]=new Function("u","return import(u)")}catch(s){const i=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[t]=e=>new Promise(((s,n)=>{const r=new URL(e,i);if(self[t].moduleMap[r])return s(self[t].moduleMap[r]);const o=new Blob([`import * as m from '${r}';`,`${t}.moduleMap['${r}']=m;`],{type:"text/javascript"}),l=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(o),onerror(){n(new Error(`Failed to import: ${e}`)),a(l)},onload(){s(self[t].moduleMap[r]),a(l)}});document.head.appendChild(l)})),self[t].moduleMap={}}}("/assets/");let D="";switch(window.location.hostname){case"localhost":D="http://localhost:8080";break;case"fortheloveofbrie.herokuapp.com":D="https://fortheloveofbrie-server.herokuapp.com"}var x=D;class N extends e.Component{constructor(e){super(e),this.handleSubmit=e=>{""!==this.state.email&&""!==this.state.firstName&&""!==this.state.lastName&&""!==this.state.password?(e.preventDefault(),fetch(`${x}/user/register`,{method:"POST",body:JSON.stringify({user:{firstName:this.state.firstName,lastName:this.state.lastName,email:this.state.email,password:this.state.password}}),headers:new Headers({"Content-Type":"application/json"})}).then((e=>e.json())).then((e=>{this.props.updateSessionToken(e.sessionToken)}))):alert("Cannot have empty field")},this.handleFirstNameChange=e=>{const t=e.target.value;this.setState({firstName:t})},this.handleLastNameChange=e=>{const t=e.target.value;this.setState({lastName:t})},this.handleEmailChange=e=>{const t=e.target.value;this.setState({email:t})},this.handlePasswordChange=e=>{const t=e.target.value;this.setState({password:t})},this.state={firstName:"",lastName:"",email:"",password:""}}render(){return e.createElement("div",{id:"registerDiv"},e.createElement("h1",{id:"welcome"},"Welcome!"),e.createElement(t,{style:{margin:"auto",width:"50%"},ref:"form",onSubmit:this.handleSubmit,onError:e=>console.log(e)},e.createElement(s,{label:"first name",onChange:this.handleFirstNameChange,name:"first name",value:this.state.firstName,validators:["required"],errorMessages:["Field is required"],autoComplete:"off"}),e.createElement(s,{label:"last name",onChange:e=>this.handleLastNameChange(e),name:"last name",value:this.state.lastName,validators:["required"],errorMessages:["Field is required"],autoComplete:"off"}),e.createElement(s,{label:"email",onChange:e=>this.handleEmailChange(e),name:"email",type:"text",value:this.state.email,pattern:".+@.+.com",validators:["required"],errorMessages:["Must be in standard email format. Ex: youremail@email.com"]}),e.createElement(s,{label:"password",onChange:this.handlePasswordChange,name:"password",value:this.state.password,type:"password",pattern:"[z-zA-Z0-9]+",minLength:"5",validators:["minStringLength:5","required"],errorMessages:["Password must contain one capital letter, one number, and be at least 5 characters in length."]}),e.createElement("br",null),e.createElement(i,{variant:"outlined",onClick:this.handleSubmit},"Register")))}}class z extends e.Component{constructor(e){super(e),this.handleSubmit=e=>{""!==this.state.email&&""!==this.state.password?(e.preventDefault(),fetch(`${x}/user/login`,{method:"POST",headers:new Headers({"Content-Type":"application/json"}),body:JSON.stringify({user:{email:this.state.email,password:this.state.password}})}).then((e=>{if(200!==e.status)throw new Error("Invalid login information");return e.json()})).then((e=>{this.props.updateSessionToken(e.sessionToken),this.props.updateUserRole(e.user.isAdmin),console.log("User successfully logged in!")})).catch((e=>alert(e)))):alert("Email and password required")},this.handleEmailChange=e=>{const t=e.target.value;this.setState({email:t})},this.handlePasswordChange=e=>{const t=e.target.value;this.setState({password:t})},this.state={email:"",password:""}}render(){return e.createElement("div",{id:"loginDiv"},e.createElement("h1",{id:"login"},"Login Here"),e.createElement(t,{style:{margin:"auto",width:"50%",padding:"10px"},ref:"form",onSubmit:this.handleSubmit,onError:e=>console.log(e)},e.createElement(s,{label:"email",onChange:this.handleEmailChange,name:"email",type:"text",value:this.state.email,validators:["required"],errorMessages:["required field"],autoComplete:"off"}),e.createElement(s,{label:"password",onChange:this.handlePasswordChange,name:"password",type:"password",validators:["minStringLength:5","required"],errorMessages:["required field"],value:this.state.password}),e.createElement("br",null),e.createElement(i,{size:"small",variant:"outlined",onClick:this.handleSubmit},"Login")))}}const j=t=>e.createElement("div",{className:"intro"},e.createElement("h1",{id:"Intro"},"Welcome to For the Love of Brie",e.createElement("br",null),"A place to share your most inspired charcuterie boards and get creative as you go!"));class P extends e.Component{constructor(e){super(e),this.loginToggle=e=>(e.preventDefault(),!1===this.state.showLogin?this.setState({showLogin:!0}):!0===this.state.showLogin?this.setState({showLogin:!1}):void 0),this.state={showLogin:!1}}render(){return e.createElement("div",null,e.createElement("div",null,e.createElement(j,null),this.state.showLogin?e.createElement("div",null,e.createElement(N,{updateSessionToken:this.props.updateSessionToken,updateUserRole:this.props.updateUserRole})):e.createElement("div",null,e.createElement(z,{updateSessionToken:this.props.updateSessionToken,updateUserRole:this.props.updateUserRole})),e.createElement("br",null),e.createElement("div",{id:"toggle"},e.createElement(i,{style:{fontSize:"15px",alignItems:"center",margin:"auto",width:"80px",display:"flex",padding:"10px 30px "},variant:"outlined",onClick:e=>{this.loginToggle(e)}}," ",this.state.showLogin?"Already a member? Login":"Not a member yet? Sign up"))))}}const $=()=>e.createElement("div",null,e.createElement("footer",{id:"footer"},e.createElement("p",null,"Â© Teayarnna Williams 2021")));class L extends e.Component{constructor(e){super(e),this.state={}}render(){return e.createElement("div",null,e.createElement("div",{id:"adminContainer"},e.createElement("div",{style:{display:"block",justifyContent:"flext-start"},className:"header"},e.createElement("h1",{style:{textAlign:"center",color:"rgba(23, 22, 22, 0.872)"}},"What would you like to manage?"))),e.createElement(a,{style:{display:"flex",justifyContent:"space-between"}},e.createElement(i,{style:{margin:"1rem 3rem"}},e.createElement(n,{style:{color:"rgba(23, 22, 22, 0.872)",fontSize:"30px"},to:"/admin/profileEdit"},"Profile Entries")),e.createElement(i,{style:{margin:"1rem 3rem"}},e.createElement(n,{style:{color:"rgba(23, 22, 22, 0.872)",fontSize:"30px"},to:"/admin/subscriptionEdit"},"Subscriptions")),e.createElement(i,{style:{margin:"1rem 3rem"},onClick:this.props.clearUser},e.createElement(n,{style:{color:"rgba(23, 22, 22, 0.872)",fontSize:"30px"},to:"/user/register"},"Logout")),console.log("Admin Nav Footer")))}}class U extends e.Component{constructor(e){super(e),this.state={},console.log(e)}render(){return e.createElement("div",{className:"mainNav"},e.createElement(a,{style:{display:"flex",justifyContent:"space-between"}},e.createElement(i,{style:{fontSize:30,margin:"1rem 3rem"}},e.createElement(n,{style:{color:"#000000"},to:"/profile/mine"}," ","My Boards")),e.createElement(i,{style:{fontSize:30,margin:"1rem 3rem"}},e.createElement(n,{style:{color:"#000000"},to:"/profile/add"}," ","Add a Board")),e.createElement(i,{style:{fontSize:30,margin:"1rem 3rem"}},e.createElement(n,{style:{color:"#000000"},to:"/subscription/signup"},"Subscribe")),e.createElement(i,{style:{fontSize:30,margin:"1rem 3rem"}},e.createElement(n,{style:{color:"#000000"},to:"/subscription/mine"},"My Subscription")),e.createElement(i,{style:{fontSize:30,margin:"1rem 3rem"},onClick:this.props.clearUser},e.createElement(n,{style:{color:"#000000"},to:"/home"},"Logout")),console.log("Nav Footer")))}}r({root:{minWidth:275},bullet:{display:"inline-block",margin:"0 2px",transform:"scale(0.8)"},title:{fontSize:14},pos:{marginBottom:12}});class B extends e.Component{constructor(e){super(e),this.fetchUser=()=>{console.log("Before User Fetch",this.props.sessionToken),this.props.sessionToken&&fetch(`${x}/user/`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({editId:e.id}),this.setState({editFirstName:e.firstName}),this.setState({editLastName:e.firstName}),this.setState({editEmail:e.email}),this.setState({editPassword:e.password}),console.log("UserEdit Fetch",e.id)})).catch((e=>console.log(e)))},this.handleSubmit=e=>{e.preventDefault(),fetch(`${x}/user/`,{method:"PUT",body:JSON.stringify({user:{id:this.state.editId,firstName:this.state.editFirstName,lastName:this.state.editLastName,email:this.state.editEmail}}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e)}))},this.handleSubmitPassword=e=>{e.preventDefault(),fetch(`${x}/user/`,{method:"PUT",body:JSON.stringify({user:{password:this.state.editPassword}}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e)}))},this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/user/${e}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchUser(),this.props.clearUser()})).catch((e=>alert(e)))},this.handleFirstNameChange=e=>{const t=e.target.value;this.setState({editFirstName:t})},this.handleLastNameChange=e=>{const t=e.target.value;this.setState({editLastName:t})},this.handleEmailChange=e=>{const t=e.target.value;this.setState({editEmail:t})},this.state={editId:0,editFirstName:"",editLastName:"",editEmail:"",editPassword:"",userData:[],results:{id:0,firstName:"",lastName:"",email:"",password:"",isAdmin:""}},console.log("UserEdit: ",this.props.sessionToken)}componentDidMount(){this.fetchUser()}render(){return e.createElement("div",null,e.createElement("h3",null,"Edit your account"),e.createElement(o,null,e.createElement(l,null,e.createElement(t,{style:{marginLeft:"auto",marginRight:"auto",width:"40%",display:"block"},ref:"form",onSubmit:this.handleSubmit,onError:e=>console.log(e)},e.createElement(s,{label:"First Name",onChange:this.handleFirstNameChange,name:"First Name",value:this.state.editFirstName,validators:["required"],errorMessages:["this field is required"],autoComplete:"off"}),e.createElement(s,{label:"Last Name",onChange:e=>this.handleLastNameChange(e),name:"Last Name",value:this.state.editLastName,validators:["required"],errorMessages:["this field is required"],autoComplete:"off"}),e.createElement(s,{label:"Email",onChange:e=>this.handleEmailChange,name:"Email",value:this.state.editEmail,validators:["required"],errorMessages:["this field is required"],autoComplete:"off"}),e.createElement("br",null),e.createElement("div",null,e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e),console.log(`\n                                    id: ${this.state.editId},\n                                    firstName: ${this.state.editFirstName},\n                                    lastName: ${this.state.editLastName},\n                                    email: ${this.state.editEmail},\n                                    password: ${this.state.editPassword},\n                                    `)}},e.createElement(n,{to:"/user/edit"},e.createElement(c,null),"Edit")),e.createElement(n,{to:"/user"},e.createElement(i,{variant:"contained",value:this.state.editId,onClick:e=>{this.handleDelete(this.state.editId)}},e.createElement(d,null),"Delete")))))))}}class R extends e.Component{constructor(e){super(e),this.state={},console.log(e)}render(){return e.createElement("div",{style:{width:"50%",display:"block"}},e.createElement("h5",null," User functionality:"),e.createElement("ul",null,e.createElement("li",null,"Subscribe"),e.createElement("li",null,"Add, edit and view profile entries"),e.createElement("li",null,"See all profile entries")))}}r({root:{minWidth:275},bullet:{display:"inline-block",margin:"0 2px",transform:"scale(0.8)"},title:{fontSize:20},pos:{marginBottom:12}});class M extends e.Component{constructor(e){super(e),this.handleSubmit=e=>{this.props.sessionToken&&(console.log("Before SubscriptionCreate Fetch"),e.preventDefault(),fetch(`${x}/subscription/signup`,{method:"POST",body:JSON.stringify({subscription:{streetAddress1:this.state.streetAddress1,streetAddress2:this.state.streetAddress2,city:this.state.city,state:this.state.state,zip:this.state.zip,userId:this.state.userId}}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e)})).catch((e=>console.log(e))))},this.state={streetAddress1:"",streetAddress2:"",city:"",state:"",zip:"",userId:0}}render(){return e.createElement("div",null,e.createElement("div",{id:"subscriptionCreateDiv"},e.createElement("h2",{id:"subscriptionHeading"},"Subscribe Today!"),e.createElement("h2",{id:"subscriptionText"},"Receive a custom board each month."),e.createElement("h3",{id:"subscriptionText"},"$30.00"),e.createElement("div",null,e.createElement(h,{label:"Street Address 1",variant:"outlined",type:"text",onChange:e=>{this.setState({streetAddress1:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Street Address 2",variant:"outlined",type:"text",onChange:e=>{this.setState({streetAddress2:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"City",variant:"outlined",onChange:e=>{this.setState({city:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"State",variant:"outlined",type:"text",onChange:e=>{this.setState({state:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Zip Code",variant:"outlined",type:"text",onChange:e=>{this.setState({zip:e.target.value})}})),e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}},e.createElement(n,{style:{color:"#000000"},to:"/subscription/mine"},"Sign up!"))))}}const F={table:{minWidth:650}};class H extends e.Component{constructor(t){super(t),this.fetchSubscriptions=()=>{console.log("Before Subscription Table Fetch"),this.props.sessionToken&&fetch(`${x}/subscription/mine`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({subscriptionData:e})})).then((()=>{null!==this.state.subscriptionData&&console.log(this.state.subscriptionData)})).catch((e=>console.log(e)))},this.subscriptionMapper=()=>this.state.subscriptionData.map(((t,s)=>e.createElement(p,{key:s},e.createElement(m,{align:"center"},t.streetAddress1),e.createElement(m,{align:"center"},t.streetAddress2),e.createElement(m,{align:"center"},t.city),e.createElement(m,{align:"center"},t.state),e.createElement(m,{align:"center"},t.zip),e.createElement(m,null,e.createElement(n,{to:`/subscription/update/${t.id}`},"Edit"))))),this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/subscription/delete/${e}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchSubscriptions()})).catch((e=>alert(e)))},this.state={subscriptionData:[],results:{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}}}componentDidMount(){this.fetchSubscriptions()}render(){return e.createElement("div",null,e.createElement("div",null,e.createElement("h3",{style:{textAlign:"center",fontSize:"30px",letterSpacing:"3px"}},"My Subscription"),e.createElement(u,{className:"mysub",component:E,id:"subscriptionTable",style:{width:"1000px",justifyContent:"center",font:"20px"}},e.createElement(g,{style:F.table,"aria-label":"simple table"},e.createElement(f,null,e.createElement(p,null,e.createElement(m,{style:{fontSize:20},align:"center"},"Street Address 1"),e.createElement(m,{style:{fontSize:20},align:"center"},"Street Address 2"),e.createElement(m,{style:{fontSize:20},align:"center"},"City"),e.createElement(m,{style:{fontSize:20},align:"center"},"State"),e.createElement(m,{style:{fontSize:20},align:"center"},"Zip"))),e.createElement(b,null,this.subscriptionMapper())))))}}class q extends e.Component{constructor(e){super(e),this.fetchSubscription=()=>{this.props.sessionToken&&(console.log("Before SubscriptionEdit Fetch"),fetch(`${x}/subscription/mine/${this.state.subId}`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken,Accept:"application/json"})}).then((e=>e.json())).then((e=>{const t=e.subscription;console.log("results: ",e),this.setState({subId:t.id,streetAddress1:t.streetAddress1,streetAddress2:t.streetAddress2,city:t.city,state:t.state,zip:t.zip}),console.log("Record Id from SubscriptionEdit",t.id)})).catch((e=>console.log(e))))},this.handleSubmit=e=>{console.log("Before SubscriptionEdit Submit"),this.props.sessionToken&&(e.preventDefault(),fetch(`${x}/subscription/update/${this.state.subId}`,{method:"PUT",body:JSON.stringify({streetAddress1:this.state.streetAddress1,streetAddress2:this.state.streetAddress2,city:this.state.city,state:this.state.state,zip:this.state.zip}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e),this.props.history.push("/subscription/mine")})).catch((e=>console.log(e))))},this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/subscription/delete/${this.state.subId}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchSubscription()})).catch((e=>alert(e)))};const t=this.props.match.params.id,s=null===t||isNaN(parseInt(t))?0:parseInt(t);console.log(s),this.state={subId:s,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:"",subscriptionData:[{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}],results:{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}}}componentDidMount(){this.fetchSubscription(),console.log("SubscriptionEdit Props",this.props)}render(){return e.createElement("div",null,e.createElement("div",{id:"subscriptionEditDiv"},e.createElement("h2",{id:"subscriptionEditHeading"},"Edit Your Subscription"),e.createElement("div",null,e.createElement(h,{label:"Street Address 1",variant:"outlined",type:"text",value:this.state.streetAddress1,onChange:e=>{this.setState({streetAddress1:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Street Address 2",variant:"outlined",type:"text",value:this.state.streetAddress2,onChange:e=>{this.setState({streetAddress2:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"City",variant:"outlined",type:"text",value:this.state.city,onChange:e=>{this.setState({city:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"State",variant:"outlined",type:"text",value:this.state.state,onChange:e=>{this.setState({state:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Zip Code",variant:"outlined",type:"text",value:this.state.zip,onChange:e=>{this.setState({zip:e.target.value})}})),e.createElement("div",{style:{color:"#000000",display:"flex",justifyContent:"space-evenly"}},e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}},e.createElement(c,null),e.createElement(n,{style:{color:"#000000"},to:"/subscription/mine"},"Update"))),e.createElement("div",null,e.createElement(n,{style:{color:"#000000"},to:"/subscription/mine"},e.createElement(i,{variant:"contained",value:this.state.subId,onClick:e=>{this.handleDelete(this.state.subId)}},e.createElement(d,null),"Delete Subscription")))))}}var O=y(q);const J={table:{minWidth:650}};class V extends e.Component{constructor(t){super(t),this.fetchSubscriptions=()=>{console.log("Before Subscription Table Fetch"),this.props.sessionToken&&fetch(`${x}/subscription/all`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({subscriptionData:e})})).then((()=>{null!==this.state.subscriptionData&&console.log(this.state.subscriptionData)})).catch((e=>console.log(e)))},this.subscriptionMapper=()=>this.state.subscriptionData.map(((t,s)=>e.createElement(p,{key:s},e.createElement(m,{component:"th",scope:"row"},t.id," "),e.createElement(m,{align:"right"},t.streetAddress1),e.createElement(m,{align:"right"},t.streetAddress2),e.createElement(m,{align:"right"},t.city),e.createElement(m,{align:"right"},t.state),e.createElement(m,{align:"right"},t.zip),e.createElement(m,{align:"right"},e.createElement(n,{style:{color:"#000000"},to:"/admin/subscriptionEdit"},e.createElement(i,{type:"submit",variant:"contained",color:"primary",value:"locationData.id",onClick:e=>{this.props.updateSubscriptionId(t.id)}},"Edit")))))),this.state={subscriptionData:[],results:{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}}}componentDidMount(){this.fetchSubscriptions()}render(){return e.createElement("div",null,e.createElement("h3",null,"Subscriptions Table"),e.createElement(u,{component:E},e.createElement(g,{style:J.table,"aria-label":"simple table"},e.createElement(f,null,e.createElement(p,null,e.createElement(m,{align:"right"},"id"),e.createElement(m,{align:"right"},"Street Address 1"),e.createElement(m,{align:"right"},"Street Address 2"),e.createElement(m,{align:"right"},"City"),e.createElement(m,{align:"right"},"State"),e.createElement(m,{align:"right"},"Zip"),e.createElement(m,{align:"right"}))),e.createElement(b,null,this.subscriptionMapper()))))}}const W=t=>e.createElement("div",null,e.createElement(n,{to:"/admin/subscriptionCreate"},e.createElement(i,{variant:"contained",color:"secondary",style:{height:"4rem",width:"10rem",margin:"2rem"}},"Add a Subscription")),e.createElement("br",null),e.createElement(n,{to:"/admin/subscriptionList"},e.createElement(i,{variant:"contained",color:"primary",style:{height:"4rem",width:"10rem"}},"View All Subscriptions")));class G extends e.Component{constructor(e){super(e),this.fetchSubscription=()=>{this.props.sessionToken&&(console.log("Before AdminSubscriptionEdit Fetch"),fetch(`${x}/subscription/one/${this.props.subscriptionId}`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({subId:e.subscription.id}),this.setState({streetAddress1:e.subscription.streetAddress1}),this.setState({streetAddress2:e.subscription.streetAddress2}),this.setState({city:e.subscription.city}),this.setState({state:e.subscription.state}),this.setState({zip:e.subscription.zip}),console.log("Record Id from Subscription Edit: ",e.subscription.id)})).catch((e=>console.log(e))))},this.handleSubmit=e=>{console.log("As SubscriptionEdit Update"),this.props.sessionToken&&(e.preventDefault(),fetch(`${x}/subscription/updat/${this.props.subscriptionId}`,{method:"PUT",body:JSON.stringify({subscription:{streetAddress1:this.state.streetAddress1,streetAddress2:this.state.streetAddress2,city:this.state.city,state:this.state.state,zip:this.state.zip}}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e.title)})).catch((e=>console.log(e))))},this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/subscription/${this.props.subscriptionId}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchSubscription()})).catch((e=>alert(e)))},this.state={subId:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:"",subscription:{},subscriptionData:[{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}],results:{id:0,streetAddress1:"",streetAddress2:"",city:"",state:"",zip:""}}}componentDidMount(){this.fetchSubscription(),console.log("AdminSubscriptionEdit Props",this.props)}render(){return e.createElement("div",null,e.createElement("div",{id:"subscriptionEditDiv"},e.createElement("h2",{id:"subscriptionEditHeading"},"Edit a Subscription"),e.createElement("div",null,e.createElement(h,{label:"Street Address 1",variant:"outlined",type:"text",value:this.state.streetAddress1,onChange:e=>{this.setState({streetAddress1:e.target.value})}}),e.createElement(h,{label:"Street Address 2",variant:"outlined",type:"text",value:this.state.streetAddress2,onChange:e=>{this.setState({streetAddress2:e.target.value})}})),e.createElement(h,{label:"City",type:"text",value:this.state.city,multiline:!0,variant:"outlined",onChange:e=>{this.setState({city:e.target.value})}}),e.createElement(h,{label:"State",type:"text",value:this.state.state,multiline:!0,variant:"outlined",onChange:e=>{this.setState({state:e.target.value})}}),e.createElement(h,{label:"Zip Code",type:"text",value:this.state.zip,multiline:!0,variant:"outlined",onChange:e=>{this.setState({zip:e.target.value})}}),e.createElement("div",{style:{display:"flex",justifyContent:"space-evenly"}},e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}},e.createElement(n,{style:{color:"#000000"},to:"/admin/subscriptionList"},e.createElement(c,null),"Edit a Subscription")),e.createElement(n,{to:"/admin/subscriptionList"},e.createElement(i,{variant:"outlined",color:"primary",value:this.state.subId,onClick:e=>{this.handleDelete(this.state.subId)}},e.createElement(d,null),"Delete Board")))))}}class Z extends e.Component{constructor(e){super(e),this.handleSubmit=e=>{e.preventDefault(),this.props.sessionToken?(console.log("Before ProfileCreate Fetch"),fetch(`${x}/profile/add`,{method:"POST",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken}),body:JSON.stringify({profile:{title:this.state.title,picture:this.state.picture,details:this.state.details,userId:this.state.userId}})}).then((e=>e.json())).then((e=>{console.log(e)})).catch((e=>console.log(e)))):console.log("that didn't work")},this.state={title:"",picture:"",details:"",userId:0}}render(){return e.createElement("div",{id:"addBoard"},e.createElement("div",{id:"profileCreateDiv"},e.createElement("h2",{id:"profileHeading"},"Add a Board"),e.createElement(v,{style:{backgroundColor:"rgba(169, 180, 198, 0.3)"}},e.createElement("div",{className:"picture"},e.createElement(h,{label:"Board Name",variant:"outlined",type:"text",onChange:e=>{this.setState({title:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Image Link",variant:"outlined",type:"text",onChange:e=>{this.setState({picture:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Details",type:"text",variant:"outlined",onChange:e=>{this.setState({details:e.target.value})}}),e.createElement(S,null,e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}}," ",e.createElement(n,{to:"/profile/mine"}),"Add Board"))))))}}const _={table:{minWidth:650}};class Y extends e.Component{constructor(t){super(t),this.fetchProfiles=()=>{console.log("Before Profile Table Fetch"),this.props.sessionToken&&fetch(`${x}/profile/mine`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({profileData:e})})).then((()=>{null!==this.state.profileData&&console.log(this.state.profileData)})).catch((e=>console.log(e)))},this.profileMapper=()=>this.state.profileData.map(((t,s)=>e.createElement(p,{key:s},e.createElement(m,{align:"center"},t.title),e.createElement(m,{align:"center"},e.createElement("img",{src:t.picture,style:{width:"100px"}})),e.createElement(m,{align:"center"},t.details),e.createElement(m,null,e.createElement(n,{to:`/profile/update/${t.id}`},"Edit"))))),this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/profile/delete/${e}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchProfiles()})).catch((e=>alert(e)))},this.state={profileData:[],results:{id:0,title:"",picture:"",details:""}}}componentDidMount(){this.fetchProfiles()}render(){return e.createElement("div",null,e.createElement("h3",{style:{textAlign:"center",fontSize:"30px",letterSpacing:"3px"}},"Current Boards"),e.createElement(u,{className:"current",component:E,style:{width:"1000px",justifyContent:"center"}},e.createElement(g,{style:_.table,"aria-label":"simple table"},e.createElement(f,null,e.createElement(p,{id:"table"},e.createElement(m,{align:"center"},"Board Title"),e.createElement(m,{align:"center"},"Board Image Link"),e.createElement(m,{align:"center"},"Board Details"))),e.createElement(b,null,this.profileMapper()))))}}const K={table:{minWidth:650}};class Q extends e.Component{constructor(t){super(t),this.fetchProfiles=()=>{console.log("Before Profile Table Fetch"),this.props.sessionToken&&fetch(`${x}/profile/`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{this.setState({profileData:e})})).then((()=>{null!==this.state.profileData&&console.log(this.state.profileData)})).catch((e=>console.log(e)))},this.profileMapper=()=>this.state.profileData.map(((t,s)=>e.createElement(p,{key:s},e.createElement(m,{component:"th",scope:"row"},t.id," "),e.createElement(m,{align:"right"},t.title),e.createElement(m,{align:"right"},t.picture),e.createElement(m,{align:"right"},t.details),e.createElement(m,{align:"right"},e.createElement(n,{style:{color:"#000000"},to:"/admin/profileEdit"},e.createElement(i,{type:"submit",variant:"contained",color:"primary",onClick:e=>{this.props.updateProfileId(t.id)}},"Edit")))))),this.state={profileData:[],results:{id:0,title:"",picture:"",details:""}}}componentDidMount(){this.fetchProfiles()}render(){return e.createElement("div",null,e.createElement("h3",null,"Profile Table"),e.createElement(u,{component:E},e.createElement(g,{style:K.table,"aria-label":"simple table"},e.createElement(f,null,e.createElement(p,null,e.createElement(m,{align:"right"},"id"),e.createElement(m,{align:"right"},"Board Title"),e.createElement(m,{align:"right"},"Board Image"),e.createElement(m,{align:"right"},"Board Details"),e.createElement(m,{align:"right"}))),e.createElement(b,null,this.profileMapper()))))}}class X extends e.Component{constructor(e){super(e),this.fetchProfile=()=>{this.props.sessionToken&&(console.log("Before AdminProfileEdit Fetch"),fetch(`${x}/profile/one/${this.state.profId}`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken,Accept:"application/json"})}).then((e=>e.json())).then((e=>{const t=e.profile;console.log("results: ",e),this.setState({profId:t.id,title:t.title,picture:t.picture,details:t.details,profile:t.profiles})})).catch((e=>console.log(e))))},this.handleSubmit=e=>{console.log("As ProfileEdit Update",this.state),this.props.sessionToken&&(e.preventDefault(),fetch(`${x}profile/update/${this.state.profId}`,{method:"PUT",body:JSON.stringify({profile:{title:this.state.title,picture:this.state.picture,details:this.state.details}}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e.title)})).catch((e=>console.log(e))))},this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/profile/${e}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchProfile()})).catch((e=>alert(e)))};const t=this.props.match.params.id,s=null===t||isNaN(parseInt(t))?0:parseInt(t);this.state={profId:s,title:"",picture:"",details:"",profile:{},profileData:[{id:0,title:"",picture:"",details:""}],results:{id:0,title:"",picture:"",details:""}}}componentDidMount(){this.fetchProfile(),console.log("AdminProfileEdit Props",this.props)}render(){return e.createElement("div",null,e.createElement("div",{id:"profileEditDiv"},e.createElement("h2",{id:"profileEditHeading"},"Edit a Board Entry"),e.createElement("div",null,e.createElement(h,{label:"Board Title",variant:"outlined",type:"text",value:this.state.title,onChange:e=>{this.setState({title:e.target.value})}}),e.createElement(h,{label:"Board Image",variant:"outlined",type:"text",value:this.state.picture,onChange:e=>{this.setState({picture:e.target.value})}})),e.createElement(h,{id:"outlined-textarea",label:"Board Details",type:"text",value:this.state.details,multiline:!0,variant:"outlined",onChange:e=>{this.setState({details:e.target.value})}}),e.createElement("div",{style:{display:"flex",justifyContent:"space-evenly"}},e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}},e.createElement(n,{style:{color:"#000000"},to:"/admin/profileList"},e.createElement(c,null),"Edit a Board Item")),e.createElement(n,{to:"/admin/profileList"},e.createElement(i,{variant:"outlined",color:"primary",value:this.state.profId,onClick:e=>{this.handleDelete(this.state.profId)}},e.createElement(d,null),"Delete Board")))))}}var ee=y(X);class te extends e.Component{constructor(e){super(e),this.fetchProfile=()=>{this.props.sessionToken&&(console.log("Before ProfileEdit Fetch"),fetch(`${x}/profile/one/${this.state.profId}`,{method:"GET",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken,Accept:"application/json"})}).then((e=>e.json())).then((e=>{const t=e.profile;console.log("results: ",e),this.setState({profId:t.id,title:t.title,picture:t.picture,details:t.details})})).catch((e=>console.log(e))))},this.handleSubmit=e=>{console.log("As ProfileEdit Update",this.state),this.props.sessionToken&&(e.preventDefault(),fetch(`${x}/profile/update/${this.state.profId}`,{method:"PUT",body:JSON.stringify({title:this.state.title,picture:this.state.picture,details:this.state.details}),headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>e.json())).then((e=>{console.log(e),this.props.history.push("/profile/mine")})).catch((e=>console.log(e))))},this.handleDelete=e=>{this.props.sessionToken&&fetch(`${x}/profile/delete/${this.state.profId}`,{method:"DELETE",headers:new Headers({"Content-Type":"application/json",Authorization:this.props.sessionToken})}).then((e=>{this.fetchProfile()})).catch((e=>alert(e)))};const t=this.props.match.params.id,s=null===t||isNaN(parseInt(t))?0:parseInt(t);this.state={profId:s,title:"",picture:"",details:"",profileData:[{id:0,title:"",picture:"",details:""}],results:{id:0,title:"",picture:"",details:""}}}componentDidMount(){this.fetchProfile(),console.log("ProfEdit Props",this.props)}render(){return e.createElement("div",null,e.createElement("div",{id:"profileEditDiv"},e.createElement("h2",{style:{letterSpacing:"5px"},id:"profileEditHeading"},"Edit Boards"),e.createElement("div",null,e.createElement(h,{label:"Edit Board Name",variant:"outlined",type:"text",value:this.state.title,onChange:e=>{this.setState({title:e.target.value})}})),e.createElement("div",null,e.createElement(h,{label:"Edit Image",variant:"outlined",type:"text",value:this.state.picture,onChange:e=>{this.setState({picture:e.target.value})}})),e.createElement(h,{label:"Edit Details",type:"text",value:this.state.details,variant:"outlined",onChange:e=>{this.setState({details:e.target.value})}}),e.createElement("div",{id:"editButton"},e.createElement(S,{style:{justifyContent:"center"}},e.createElement(n,{to:"/profile/mine"},e.createElement(i,{variant:"contained",onClick:e=>{this.handleSubmit(e)}},e.createElement(c,null),"Edit a Profile Entry")))),e.createElement("div",{id:"deleteProfileButton"},e.createElement(n,{to:"/profile/mine"},e.createElement(i,{style:{justifyContent:"center"},variant:"contained",value:this.state.profId,onClick:e=>{this.handleDelete(this.state.profId)}},e.createElement(d,null),"Delete Profile")))," */"))}}var se=y(te);const ie=t=>e.createElement("div",null,e.createElement(n,{to:"/admin/profileCreate"},e.createElement(i,{variant:"contained",color:"secondary",style:{height:"4rem",width:"10rem",margin:"2rem"}},"Add a Board")),e.createElement("br",null),e.createElement(n,{to:"/admin/profileList"},e.createElement(i,{variant:"contained",color:"primary",style:{height:"4rem",width:"10rem"}},"View All Boards"))),ae=t=>(console.log("switchController: ",t.sessionToken),e.createElement("div",{className:"ViewsDiv"},e.createElement("div",{className:"routes"},e.createElement(T,null,e.createElement(C,{exact:!0,path:"/home"}),e.createElement(C,{path:"/auth"},e.createElement(P,{updateSessionToken:t.updateSessionToken,updateUserRole:t.updateUserRole})),e.createElement(C,{exact:!0,path:"/user/edit"},e.createElement(B,{sessionToken:t.sessionToken,clearUser:t.clearUser})),e.createElement(C,{exact:!0,path:"/user/home"},e.createElement(R,null)),e.createElement(C,{path:"/subscription/signup"},e.createElement(M,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/subscription/mine"},e.createElement(H,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/subscription/update/:id"},e.createElement(O,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/profile/update/:id"},e.createElement(se,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/admin/subscriptionList"},e.createElement(V,{sessionToken:t.sessionToken,subscriptionId:t.subscriptionId,updateSubscriptionId:t.updateSubscriptionId})),e.createElement(C,{exact:!0,path:"/admin/subscription"},e.createElement(W,null)),e.createElement(C,{path:"/admin/subscriptionEdit"},e.createElement(G,{sessionToken:t.sessionToken,subscriptionId:t.subscriptionId})),e.createElement(C,{exact:!0,path:"/profile/add"},e.createElement(Z,{sessionToken:t.sessionToken})),e.createElement(C,{exact:!0,path:"/profile/mine"},e.createElement(Y,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/admin/profileList"},e.createElement(Q,{sessionToken:t.sessionToken,updateProfileId:t.updateProfileId})),e.createElement(C,{path:"/admin/profileEdit"},e.createElement(ee,{sessionToken:t.sessionToken,updateProfileId:t.updateProfileId})),e.createElement(C,{path:"/profile/mine/:id"},e.createElement(se,{sessionToken:t.sessionToken})),e.createElement(C,{path:"/admin/profiles"},e.createElement(ie,null))))));class ne extends e.Component{constructor(t){super(t),this.updateUserRole=e=>{null!==e?(this.setState({userRole:e}),localStorage.setItem("userRole",e)):(this.setState({userRole:"false"}),localStorage.setItem("userRole","false")),console.log("Local Storage: ",localStorage),console.log(`Admin?: ${this.state.userRole}`)},this.updateSessionToken=e=>{localStorage.setItem("sessionToken",e),this.setState({sessionToken:e}),console.log(`Token: ${e}`)},this.updateEmail=e=>{localStorage.setItem("email",e),this.setState({email:e}),console.log(`email: ${e}`)},this.updateProfileId=e=>{this.setState({profileId:e}),console.log("profileId from App: ",e)},this.updateSubscriptionId=e=>{this.setState({subscriptionId:e}),console.log("subscriptionId from App: ",e)},this.updateUserId=e=>{this.setState({userId:e}),console.log("userId from app: ",e)},this.clearUser=()=>{localStorage.clear(),this.setState({sessionToken:"",userRole:"false"})},this.protectedViews=()=>(console.log("userRole: ",this.state.userRole),this.state.sessionToken===localStorage.getItem("sessionToken")?"true"===localStorage.getItem("userRole")?e.createElement(L,{sessionToken:this.state.sessionToken,clearUser:this.clearUser,email:this.state.email}):e.createElement(U,{clearUser:this.clearUser,email:this.state.email,sessionToken:this.state.sessionToken}):e.createElement(C,{exact:!0,path:"/home"},e.createElement(P,{updateSessionToken:this.updateSessionToken,updateUserRole:this.updateUserRole}),e.createElement(j,null))),this.state={sessionToken:"",email:"",userRole:"",profileId:0,subscriptionId:0,userId:0},this.protectedViews=this.protectedViews.bind(this)}componentDidMount(){console.log("Mounted"),localStorage.getItem("firstName")&&(this.setState({email:localStorage.getItem("email")}),console.log(this.state.email)),localStorage.getItem("sessionToken")&&this.setState({sessionToken:localStorage.getItem("sessionToken")}),localStorage.getItem("userRole")&&(this.setState({userRole:localStorage.getItem("userRole")}),console.log(this.state.userRole))}componentDidUpdate(){console.log("Updated"),console.log(`User is admin: ${localStorage.getItem("userRole")}`)}render(){const t=localStorage.getItem("sessionToken");return e.createElement("div",{className:"App"},e.createElement("header",{id:"main"},e.createElement("h1",{className:"Logo"},"For The Love of Brie")),e.createElement(k,null,t?this.protectedViews():e.createElement(P,{updateSessionToken:this.updateSessionToken,updateUserRole:this.updateUserRole}),e.createElement(ae,{updateSessionToken:this.updateSessionToken,updateEmail:this.updateEmail,updateUserRole:this.updateUserRole,sessionToken:this.state.sessionToken,email:this.state.email,userRole:this.state.userRole,protectedViews:this.protectedViews,clearUser:this.clearUser,updateProfileId:this.updateProfileId,updateSubscriptionId:this.updateSubscriptionId,updateUserId:this.updateUserId,profileId:this.state.profileId,subscriptionId:this.state.subscriptionId,userId:this.state.userId}),console.log("Bottom of App")),e.createElement($,null))}}const re=A({palette:{primary:{light:"rgb(227,223, 255)",main:"rgb(6,167, 125)",dark:"rgb(101,83,47)"},secondary:{light:"rgb(247,208,138)",main:"rgb(34,124,157)",dark:"rgb(11,19,43)"}}});w.render(e.createElement(I,{theme:re},e.createElement(ne,null)),document.getElementById("root"));
